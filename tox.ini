[tox]
envlist = py3{7,8,9,10,11}-{linux,macos,windows}
skip_missing_interpreters = true
isolated_build = true
skipsdist = true
min_version = 4.3.3

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311

[gh-actions:env]
PLATFORM =
    ubuntu-20.04: linux
    macos-latest: macos
    windows-latest: windows

[base]
deps =
    pip>=21.1
    setuptools_scm[toml]

[build]
deps =
    pip>=21.1
    build
    twine

[testenv]
skip_install = true
install_command = pip install {opts} {packages}

[testenv:{sync,do}]
envdir = {toxinidir}/.sync
# these 2 tox env cmds share the same env with the following plugin
# https://github.com/masenf/tox-ignore-env-name-mismatch
runner = ignore_env_name_mismatch

description =
    do: Run cmd following "--" from the sync env, e.g. "tox -e do -- repolite --show"
    sync: Install repolite and use it for cloning diagram workflow deps

passenv =
    pythonLocation
    PYTHON
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    XDG_*
    CI
    GITHUB*
    OS
    LANG
    LC_COLLATE
    SSH_*
    GID
    UID
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    # logging_tree
    {[base]deps}
    repolite @ https://github.com/sarnold/repolite/releases/download/0.6.2/repolite-0.6.2-py3-none-any.whl

commands =
    sync: repolite {posargs:--quiet}
    do: {posargs:python -c 'print("No cmd provided")'}

[testenv:dev]
skip_install = true

setenv =
    DISABLE_MAVNATIVE = True
    MDEF_PATH = {envsitepackagesdir}/pymavlink/message_definitions/v1.0

passenv =
    HOME
    USERNAME
    USER
    XDG_*
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE
    SETUPTOOLS_SCM_DEBUG

allowlist_externals =
    bash

deps =
    {[base]deps}
    -e .

commands =
    python -m pip --version

[testenv:changes]
skip_install = true
always_copy = False

description =
    changes: Generate full or partial changelog; use git delta syntax for changes-since

allowlist_externals =
    bash

deps =
    pip>=20.0.1
    gitchangelog @ https://github.com/sarnold/gitchangelog/releases/download/3.2.0/gitchangelog-3.2.0.tar.gz

commands =
    bash -c 'gitchangelog {posargs} > CHANGELOG.rst'

[testenv:build]
skip_install = true

passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE
    SETUPTOOLS_SCM_DEBUG

deps =
    {[build]deps}

commands =
    python -m build .
    twine check dist/*

[testenv:check]
skip_install = true
passenv = CI

deps =
    pip>=21.1

commands =
    pip install rstdocgen --force-reinstall --pre --prefer-binary -f dist/

[testenv:lint]
passenv =
    CI
    OS
    PYTHONIOENCODING

deps =
    {[base]deps}
    pylint
    -r requirements.txt

commands =
    pylint --fail-under=6.75 --suggestion-mode=True src/

[testenv:style]
passenv =
    CI
    OS
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    flake8
    flake8-bugbear

commands =
    flake8 scripts/ src/

[testenv:mypy]
skip_install = true

setenv = PYTHONPATH = {toxinidir}/src

deps =
    {[base]deps}
    mypy
    munch-stubs
    -r requirements.txt

commands =
    python -m mypy --follow-imports=normal --install-types --non-interactive src/

[testenv:black]
skip_install = true

deps =
    {[base]deps}
    black

commands =
    black -v -S src/ {posargs}

[testenv:isort]
skip_install = true

deps =
    {[base]deps}
    isort
    -r requirements.txt

commands =
    python -m isort scripts/ src/

[testenv:clean]
skip_install = true
allowlist_externals =
    bash

deps =
    pip>=21.1

commands =
    bash -c 'rm -rf dist/ build/ src/*.egg-info src/*/__pycache__ .coverage*'
    bash -c 'rm -rf docs/source/api/ __pycache__ *.egg-info'
